{"pages":[],"posts":[{"title":"HTTP详细介绍","text":"超文本传输协议(HTTP),是一种用于客户端和服务端之间的应用层通信协议.其特点是简单快速、灵活.HTTP是一种无状态协议.HTTP协议不对请求和响应之间的通信状态进行保存,不保留一切请求和响应的信息 HTTP报文 用于HTTP协议交互的信息是一种由多行数据构成的字符串文本, 称为HTTP报文.请求端的HTTP报文叫做请求报文,响应端的叫做响应报文. 1.请求和响应信息的报文结构 请求和响应的信息都是由 头部 + 空行 + 实体的","link":"/2019/10/30/http详细介绍/"},{"title":"使用hexo在github上搭建个人博客","text":"文章摘要、概要 ##士大夫撒 askfheowiasjfojsifaf","link":"/2019/10/29/使用hexo在github上搭建个人博客/"},{"title":"CADisplayLink简介","text":"CADisplayLink是与屏幕刷新频率相同的一个定时器,通常用来绘图,使自定义绘图的刷新频率和屏幕的刷新频率相同(60帧的刷新频率) 接口和属性1.接口1+ (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel; 生成一个display link 实例,制定target和调用方法,方法签名为'(void)selector:(CADisplayLink *)sender' 1- (void)addToRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode; 将display link 实例注册到一个runloop中 1- (void)invalidate; 将display link从所有的runloop中移除,并释放 2.属性1@property(readonly, nonatomic) CFTimeInterval duration; 两次刷新之间的时间间隔 1@property(readonly, nonatomic) CFTimeInterval timestamp 当前帧的时间 1@property(readonly, nonatomic) CFTimeInterval targetTimestamp 下一帧渲染的时间 1@property(nonatomic) NSInteger preferredFramesPerSecond 首选每秒帧数,默认为0,会按照设备的每秒最大帧数刷新(60帧每秒),当需要比较慢的频率刷新时可以设置该属性 1@property(getter=isPaused, nonatomic) BOOL paused; 为true时,当前实例禁止触发,默认为false 注意duration属性返回的时间间隔是根据maximumFramesPerSecond属性得来的,如果要计算实际的时间间隔,用timestamp - targetTimestamp得出 当程序暂时不需要相应display link实例的事件回调时,可以通过将pause设置为false或true来暂停和启用display link实例 CADisplayLink不应该被子类化","link":"/2019/09/19/CADisplayLink/"}],"tags":[{"name":"http","slug":"http","link":"/tags/http/"},{"name":"TCP/IP","slug":"TCP-IP","link":"/tags/TCP-IP/"},{"name":"123","slug":"123","link":"/tags/123/"},{"name":"iOS","slug":"iOS","link":"/tags/iOS/"},{"name":"CoreAnimation","slug":"CoreAnimation","link":"/tags/CoreAnimation/"},{"name":"HTTP","slug":"HTTP","link":"/tags/HTTP/"}],"categories":[{"name":"软件开发","slug":"软件开发","link":"/categories/软件开发/"},{"name":"网络","slug":"网络","link":"/categories/网络/"}]}